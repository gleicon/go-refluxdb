name: Integration Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  integration:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        
    - name: Install dependencies
      run: make deps
      
    - name: Build
      run: make build
      
    - name: Start RefluxDB
      run: |
        ./build/refluxdb &
        sleep 5  # Wait for server to start
        
    - name: Run integration tests
      run: |
        # Send test data via UDP
        echo "cpu,host=server1 value=42.5" | nc -u localhost 8089
        echo "cpu,host=server2 value=85.0" | nc -u localhost 8089
        echo "memory,host=server1 used=75.5,free=24.5" | nc -u localhost 8089
        echo "memory,host=server2 used=82.3,free=17.7" | nc -u localhost 8089
        
        # Give some time for data to be processed
        sleep 2
        
        # Test HTTP endpoints
        curl -X POST "http://localhost:8086/write?db=mydb" --data-binary "cpu,host=server3 value=95.0"
        curl -X POST "http://localhost:8086/write?db=mydb" --data-binary "memory,host=server3 used=90.0,free=10.0"
        
        # Query data via HTTP
        curl -G "http://localhost:8086/query" --data-urlencode "db=mydb" --data-urlencode "q=SELECT * FROM cpu"
        curl -G "http://localhost:8086/query" --data-urlencode "db=mydb" --data-urlencode "q=SELECT mean(\"value\") FROM cpu WHERE time >= now() - 1h GROUP BY time(5m) fill(null)"
        
        # Run integration tests
        make test 